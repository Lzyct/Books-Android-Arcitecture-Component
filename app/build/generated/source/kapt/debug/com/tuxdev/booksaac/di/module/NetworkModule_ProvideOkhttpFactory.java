// Generated by Dagger (https://google.github.io/dagger).
package com.tuxdev.booksaac.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

public final class NetworkModule_ProvideOkhttpFactory implements Factory<OkHttpClient> {
  private final NetworkModule module;

  public NetworkModule_ProvideOkhttpFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return provideInstance(module);
  }

  public static OkHttpClient provideInstance(NetworkModule module) {
    return proxyProvideOkhttp(module);
  }

  public static NetworkModule_ProvideOkhttpFactory create(NetworkModule module) {
    return new NetworkModule_ProvideOkhttpFactory(module);
  }

  public static OkHttpClient proxyProvideOkhttp(NetworkModule instance) {
    return Preconditions.checkNotNull(
        instance.provideOkhttp(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
