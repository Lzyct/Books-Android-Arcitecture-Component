// Generated by Dagger (https://google.github.io/dagger).
package com.tuxdev.booksaac.di.module;

import com.tuxdev.booksaac.network.BookServices;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class NetworkModule_ProvideSamalonaServiceFactory implements Factory<BookServices> {
  private final NetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideSamalonaServiceFactory(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public BookServices get() {
    return provideInstance(module, retrofitProvider);
  }

  public static BookServices provideInstance(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    return proxyProvideSamalonaService(module, retrofitProvider.get());
  }

  public static NetworkModule_ProvideSamalonaServiceFactory create(
      NetworkModule module, Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideSamalonaServiceFactory(module, retrofitProvider);
  }

  public static BookServices proxyProvideSamalonaService(
      NetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideSamalonaService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
